// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.6
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace MusicIdentificationSystem.EF.Entities
{

    // Tracks
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.32.0.0")]
    public partial class TrackEntity
    {
        public int Id { get; set; } // Id (Primary key)
        public string Isrc { get; set; } // ISRC (length: 50)
        public string Artist { get; set; } // Artist (length: 255)
        public string Title { get; set; } // Title (length: 255)
        public string Album { get; set; } // Album (length: 255)
        public int? ReleaseYear { get; set; } // ReleaseYear
        public double? Length { get; set; } // Length

        // Reverse navigation

        /// <summary>
        /// Child Fingerprints where [Fingerprints].[TrackId] point to this entity (FK_Fingerprints_Tracks)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<FingerprintEntity> Fingerprints { get; set; } // Fingerprints.FK_Fingerprints_Tracks
        /// <summary>
        /// Child SubFingerprints where [SubFingerprints].[TrackId] point to this entity (FK_SubFingerprints_Tracks)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<SubFingerprintEntity> SubFingerprints { get; set; } // SubFingerprints.FK_SubFingerprints_Tracks

        public TrackEntity()
        {
            ReleaseYear = 0;
            Length = 0;
            Fingerprints = new System.Collections.Generic.List<FingerprintEntity>();
            SubFingerprints = new System.Collections.Generic.List<SubFingerprintEntity>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
